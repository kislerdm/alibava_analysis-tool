<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
Steering File generated by Marlin GUI on Fri Aug  2 11:52:27 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
   - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
   - Extra parameters that aren't categorized as default in a processor lost their description and type.
   ============================================================================================================================
   -->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
   <processor name="AIDA"/>
   <processor name="LoadDB"/>
   <group name="ApplyAlignment"/>
   <group name="AlignMille"/>
   <processor name="MyEUTelUtilityPrintEventNumber"/>
   <processor name="Save"/>
   </execute>

   <global>
   <parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-hitmaker.slcio </parameter>
   <parameter name="GearXMLFile" value="@GearFilePath@/@GearGeoFile@"/>
   <parameter name="MaxRecordNumber" value="@MaxEvent@"/>
   <parameter name="SkipNEvents" value="@SkipNEvents@"/>
   <parameter name="SupressCheck" value="false"/>
   <parameter name="Verbosity" value="MESSAGE4"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
 <!-- compression of output file 0: false >0: true (default) -->
 <parameter name="Compress" type="int" value="1"/>
 <!-- filename without extension-->
 <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-align-dut-1_@refcut@"/>
 <!-- type of output file root (default) or xml )-->
 <parameter name="FileType" type="string" value="root"/>
 <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
 <!--parameter name="Verbosity" type="string" value=""/-->
 </processor>

 <processor name="LoadDB" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
 <!--Initialization of a conditions database handler-->
 <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
 <!--Initialization of a conditions db file handler-->
 <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
 <!--Initialization string for conditions database-->
 <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
 <!--Initialization of a data file handler-->
 <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
 <!--Initialization of a simple conditions file handler-->
 <!-- Reference hits collection -->
 <parameter name="SimpleFileHandler" type="StringVec"> refhit @DatabasePath@/@FilePrefix@-referencehit.slcio referenceHit </parameter>
 <!-- prealignment constants collection -->
 <parameter name="SimpleFileHandler" type="StringVec"> prealign  @DatabasePath@/@FilePrefix@-prealignment.slcio alignment </parameter>
 <!-- Millepede alignment constants (step 1) collection -->
 <parameter name="SimpleFileHandler" type="StringVec"> align1 @DatabasePath@/@FilePrefix@-gbl-mille-alignment-tel-1.slcio alignment_mille_1 </parameter>
 <!-- Millepede alignment constants (step 1) collection -->
 <parameter name="SimpleFileHandler" type="StringVec"> align2 @DatabasePath@/@FilePrefix@-gbl-mille-alignment-tel-2.slcio alignment_mille_2 </parameter>
 <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
 <!--parameter name="Verbosity" type="string" value=""/-->
 </processor>

<group name="ApplyAlignment" >
<!--Rotation Angle around X axis-->
<!--parameter name="Alpha" type="double" value="0"/-->
<!--Available directinos are:
0 -> direct
1 -> reverse -->
<parameter name="ApplyAlignmentDirection" type="int" value="0"/>
<!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection?-->
<parameter name="ApplyToReferenceCollection" type="bool" value="0"/>
<!--Rotation Angle around Y axis-->
<!--parameter name="Beta" type="double" value="0"/-->
<!--Available methods are:
0 -> shift only
1 -> rotation first
2 -> shift first -->
<parameter name="CorrectionMethod" type="int" value="1"/>
<!--Enable or disable DEBUG mode -->
<!--parameter name="DEBUG" type="bool" value="false"/-->
<!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
<parameter name="DoAlignCollection" type="bool" value="true"/>
<!--Apply alignment steps in one go. Is supposed to be used for reversealignment in reverse order, like: undoAlignment, undoPreAlignment, undoGear -->
<!--parameter name="DoAlignmentInOneGo" type="bool" value="false"/-->
<!--Implement geometry shifts and rotations as described in GEAR steering file -->
<!--parameter name="DoGear" type="bool" value="false"/-->
<!--Rotation Angle around Z axis-->
<!--parameter name="Gamma" type="double" value="0"/-->
<!--Enable or disable histograms-->
<parameter name="HistogramSwitch" type="bool" value="false"/>
<!--This is the name of the modified output reference hit collection-->
<!--parameter name="OutputReferenceCollection" type="string" value="output_refhit"/-->
<!--Events number to have DEBUG1 printed outs (default=10)-->
<!--parameter name="PrintEvents" type="int" value="0"/-->

    <processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
<!--Apply to the input hit the alignment corrections-->
<!--Alignment constant from the condition file-->
<parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
<!--The name of the input hit collection-->
<parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
<!--The name of the output hit collection-->
<parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> Hit_align1 </parameter>
<!--This is the name of the reference hit collection-->
<parameter name="ReferenceCollection" type="string" value="refhit"/>
<!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
<!--parameter name="Verbosity" type="string" value=""/-->
<!--List of alignment collections that were applied to the DUT-->
<parameter name="alignmentCollectionNames" type="StringVec" value="prealign"/>
<!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
<!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
    </processor>

    <processor name="ApplyAlignment1" type="EUTelApplyAlignmentProcessor">
<!--Apply to the input hit the alignment corrections-->
<!--Alignment constant from the condition file-->
<parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> align1 </parameter>
<!--The name of the input hit collection-->
<parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> Hit_align1 </parameter>
<!--The name of the output hit collection-->
<parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> Hit_align2 </parameter>
<!--This is the name of the reference hit collection-->
<parameter name="ReferenceCollection" type="string" value="refhit"/>
<!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
<!--parameter name="Verbosity" type="string" value=""/-->
<!--List of alignment collections that were applied to the DUT-->
<parameter name="alignmentCollectionNames" type="StringVec" value="align1"/>
<!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
<!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
    </processor>

    <processor name="ApplyAlignment2" type="EUTelApplyAlignmentProcessor">
<!--Apply to the input hit the alignment corrections-->
<!--Alignment constant from the condition file-->
<parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> align2 </parameter>
<!--The name of the input hit collection-->
<parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> Hit_align2 </parameter>
<!--The name of the output hit collection-->
<parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> Hit_align3 </parameter>
<!--This is the name of the reference hit collection-->
<parameter name="ReferenceCollection" type="string" value="refhit"/>
<!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
<!--parameter name="Verbosity" type="string" value=""/-->
<!--List of alignment collections that were applied to the DUT-->
<parameter name="alignmentCollectionNames" type="StringVec" value="align2"/>
<!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
<!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
<parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
    </processor>

</group>

<group name="AlignMille" >
<!-- Max number of events to be processed -->
<parameter name="EventMaxNumb" type="int"> @MaxEvent@ </parameter>
<!-- Beam energy [GeV], used to calculate amount of scatter-->
<parameter name="Ebeam" type="double"> 5.0 </parameter>
<!-- Type of alignment procedure
0 (default) - only tel planes are being aligned
1 - REF is being aligned (tel planes should be fixed!)
2 - DUT is being aligned (tel planes should be fixed!)
-->
<parameter name="AlignType" type="int"> 1 </parameter>
<!-- Fix sensor planes in the fit according to their sensor ids. -->
<parameter name = "FixedPlanes" type="VecInt"> 0 1 2 3 4 5 </parameter>
<!-- Tot max numb. of tracks . -->
<parameter name = "MaxTrackCandidatesTotal" type="int"> 10000000 </parameter>
<!-- Max numb. of tracks per event -->
<parameter name = "MaxTrackCandidates" type="int"> 4000 </parameter>
<parameter name = "OnlySingleHitEvents" type="int"> 0 </parameter>
<!-- Use only events with one track candidate -->
<parameter name = "OnlySingleTrackEvents" type="int"> 0 </parameter>
<!-- Alignment mode:
2 - shifts in X and Y
3 - shifts in X and Y and rotation around the Z axis
4 - shifts in X,Y and Z and rotation around the Z axis
-->
<parameter name = "AlignMode" type="int"> 3 </parameter>
<!-- Use only events with one track candidate -->
<parameter name = "OnlySingleTrackEvents" type="int"> 0 </parameter>
<!-- DUT parameters -->
<!-- DUT sensetive axis -->
<parameter name="DUTSensetiveAxis" type="string" value="y"/>
<!-- Shall the DUT be takken to account as a scatterer? (1-yes, 0-no). No by default. -->
<parameter name="DUTscatterer" type="int"> 1 </parameter>
<!--Radiation length of the DUT material -->
<parameter name="DUTX0" type="double"> 0.08 </parameter>

<!-- Fit Analysis -->
<parameter name="Chi2ToNdfCut" type="double"> 0.01 </parameter>
<!-- Verbosity -->
<parameter name="Verbosity" type="string"> DEBUG0 </parameter>

<processor name="AlignMille" type="EUTelMilleGBL">
<!-- Input mode:
0 - hits read from hitfile with simple trackfinding
1 - hits read from output of tracking processor.
2 - Test mode. Simple internal simulation and simple trackfinding
3 - Mixture of a track collection from the telescope and hit collections for the DUT (only one DUT layer can be used unfortunately) -->
<parameter  name="InputMode" type="int"> 0 </parameter>
<!-- Input Hit collection name -->
<parameter  name = "HitCollectionName" type = "string"> Hit_align3 </parameter>
<!-- Input Track collection name -->
<parameter  name = "TrackCollectionName" type = "string"> fittracks </parameter>
<!-- Output *.slcio file with the alignment constants  -->
<parameter  name = "AlignmentConstantLCIOFile" type = "string"> @DatabasePath@/@FilePrefix@-gbl-mille-alignment-dut-1_@refcut@.slcio  </parameter>
<!-- Output collection name -->
<parameter  name = "AlignmentConstantCollectionName" type = "string"> alignment_dut_1 </parameter>
<!-- Mille bin file name -->
<parameter name = "BinaryFilename" type="string"> @DatabasePath@/@FilePrefix@-mille-dut-1.bin </parameter>
<!-- Pede program executrion -->
<parameter name = "RunPede" type="int"> 1 </parameter>
<!-- Generate a steering file for the pede program or not -->
<parameter name = "GeneratePedeSteerfile" type="int"> 1 </parameter>
<!-- Name of the steering file for the pede program -->
<parameter name = "PedeSteerfileName" type="string"> @DatabasePath@/@FilePrefix@-steering_mille-dut-1_@refcut@.txt </parameter>
<!-- CUTS -->
<!-- Upstream triplet residual cut [um]: hits are being assignet to the upstream arm
if the residual between the intermediate hit and the esctiamtion of the triplet-track is not nigher than this number -->
<parameter name = "triCut" type="double"> 80. </parameter>
<!-- Downstream triplet residual cut [um]: hits are being assignet to the downstream arm
if the residual between the intermediate hit and the esctiamtion of the triplet-track is not nigher than this number -->
<parameter name = "driCut" type="double"> 80. </parameter>
<!-- Triplet-tracks matching cut -->
<parameter name = "sixCut" type="double"> 150. </parameter>
<!-- Upstream Track - DUT matching cut -->
<parameter name = "TriDutCut" type="double"> 40. </parameter>
<!-- Downstream Track - REF matching cut -->
<parameter name = "DriRefCut" type="double"> @refcut@ </parameter>
<!-- RESOLUTIONS and RESIDUALS -->
<!-- Telescope resolution in um (sigma_x = sigma_y) -->
<parameter name = "TelescopeResolution" type="float"> 4 </parameter>
<!-- DUT resolution in um (sigma_x/sigma_y if x/y is the sensetive axis) -->
<parameter name = "DUTResolution" type="float"> 50. </parameter>
<!-- REF resolution in um (sigma_x = sigma_y) -->
<parameter name = "REFResolution" type="float"> 20. </parameter>

</processor>

</group>

 <processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
 <!--Print event number for every n-th event-->
 <parameter name="EveryNEvents" type="int" value="1000"/>
 <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
 <!--parameter name="Verbosity" type="string" value=""/-->
 <!--print the event timestamp as read from LCIO-->
 <!--parameter name="printTimestamp" type="bool" value="false"/-->
 </processor>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
 <!--drops the named collections from the event-->
 <!--parameter name="DropCollectionNames" type="StringVec"> hit hit_eta3x3 alignedHit_eta3x3 </parameter-->
 <!--drops all collections of the given type from the event-->
 <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
 <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
 <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
 <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
 <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
 <!-- name of output file -->
 <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@FilePrefix@-align-dut-1_@refcut@.slcio"/>
 <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
 <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
 <!--Set it to true to remove intermediate EORE in merged runs-->
 <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
 <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
 <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
 <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
 <!--parameter name="Verbosity" type="string" value="MESSAGE4"/-->
 </processor>

</marlin>
