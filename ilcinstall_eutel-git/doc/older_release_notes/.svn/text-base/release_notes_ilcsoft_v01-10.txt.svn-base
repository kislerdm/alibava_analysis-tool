#################################
#
#   iLCSoft release - v01-10
#
#################################

-------------------------------------------------------------------
New directory for afs reference installations - starting from  release v01-09:

  /afs/desy.de/project/ilcsoft/sw/

with subdirectories for different CPUs, operating systems and gcc versions.e.g:

 i386_gcc34_sl4        # i386 CPU, 32 bit, gcc3.4, SL4 and compatible
 i386_gcc41_sl5        # i386 CPU, 32 bit, gcc4.1, SL5 and compatible
 x86_64_gcc41_sl5      # i686 CPU, 64 bit, gcc4.1, SL5 and compatible


The old ilcsoft releases are still available under /afs/desy.de/group/it/ilcsoft.

[The old path relied on the @sys mechanism for afs to automatically link to the 
appropriate subdirectory. However this mechanism is no longer supported by 
current OS versions and e.g. does not allow to distinguish 32bit from 64bit builds]


------------------------------------------------------------------

========================================

 New packages in iLCSoft added in v01-10

========================================

 KalTest v01-00

 KalDet  v01-00

 Garlic  v2.0.3
 
 FastJetClustering v00-01
  (+ FastJet 2.4.2 )

-------------------------------------------------
Release notes of packages that have been changed 
-------------------------------------------------

================================
  Mokka
================================
  
mokka-07-06
-----------

  I. Bug fix in driver SField01
  II. MC Run Number added to the Run Header
 III. New Detector Model ILD_00_EcalSc02
  IV. First version of the SiLC framework
   V. New implementation for FTD using micro-strips
  VI. Improvements in AHcal (electronics)
 VII. New driver introducing services between TPC/Ecal/AHcal
VIII. New driver ClicYoke01
  IX. Update of mokka version printed at start and in the GEAR and LCIO files
   X. New model ILD_01pre00
  XI. New model CLIC_ILD_CDR
 XII. New driver for TPC -- TPC10
XIII. Run abort when reaching end of input file
 XIV. Corrections to drivers Yoke05 and Coil01.


================================
 LCIO
================================

 -----------
| v01-51-02 |
 -----------
   
    - patch release:
         fix for building the ROOT dictionary with ROOT 5.27.06
         fix for printing covariance matrix of TrackerHit in dumpevent
         missing documentation of TRAWBIT_CM in TrackerPulse (EVENT)  changes to EDM:

================================
 GEAR
================================
  --------
 | v00-16 |
  --------

   - updated SiPlanesParameters (I.Rubinsky) :
       Three new Layer related parameters  added.
       Three rotation angles: rotationXY = alfa, rotationZX = beta, 
                              rotationZY = gamma -> rotations around the local sensor frame axes

        * A. Muennich:
          New implementation of GearDistanceProperties and GearPointProperties using TGeo from ROOT:
            - reads in the geometry from a gdml file to instantiate the volume hierarchy
        - requires newest ROOT version 5.27.06 or the svn trunk
            - MaterialMapFactory: A tool to create a material map in memory that can then be used to look up the
          values during the run of the application. Saves computing time if many many querries are needed,
          e.g. Pandora where each calorimeter cell wants to know the material before.
        BUILD:
    To switch on the new functionality use -DBUILD_TGEO=1 and provide the CMAKE_MODULE_PATH and ROOT info
    cmake -DBUILD_TGEO=1 -DCMAKE_MODULE_PATH="xx" -DROOT_DIR=$ROOTSYS ..
        USAGE:
        - in gear/example there are two gdml files: World_ILD00.gdml ( full detetcor geometry of mokka model ILD00)
          and TPC_ILD00.gdml (just the TPC from mokka model ILD00). The corresponding gear steering files are
          gearTGeo_ILD00.xml which is a full gear file and gear_TGeo.xml which just has the part to use the new
          features.

          Test programs are available to run in the example directory:
      ../build/bin/testMaterialBudget gear_TGeo.xml
      Several test exist:
      testGearTGeo: basic test for usage of  DistanceProperties and PointProperties with TGeo
      testMaterialMap: uses DistanceProperties to create a material scan in r, theta
      testMaterialBudget: uses information from gear file to compute the envelopes of subdetectors and the
                      calculates the material budget before the TPC, of the TPC and up to th ECAL in
                              dependence on theta. (needs full gear file with detectors = gearTGeo_ILD00.xml)
      testMaterialMapFactory: example of how to use the MaterialMapFactory tool to create a MaterialMap in memory.
                                  This is usefull if an application (e.g. Pandora) has to querry the material budget
                          for certain point many many times.


        * Imrovements and fixes for TPC -   M. Killenberg
           - implemented z-Position of TPCModule
           - improved performance of local<->global coordinate transformations in TPCModule
           - fixed bug in TPCModuleXML

           - FixedPadSizeDiskLayout now can be segment of a circle
             changes 100% backward compatible  (Ching Bon Lam)
           - improved getNearestPad() in VersatileDiskRowLayout




================================
  LCCD   
================================

 --------
| v01-01 |   (R. Diener)
 -------- 

        - DBInterface::tagFolder now handles folders previously tagged of whose subfolders are 
          tagged with the tag supplied to tagFolder.
        - Replaced lcio exceptions with new LCCD exceptions.
        - Exception throw when try to create a SimpleFile for a timestamp where no collection present
        - Added DBSINCE, DBTILL and DBQUERYTIME for default collections

        Note: requires CondDBMySQL_ILC-0-9-2

================================
  Marlin
================================

 -----------
| v00-13-01 |
 -----------

        -  added macro streamlog_level( MLEVEL ) for use in if() statements with VERBOSITY, e.g.
          if( streamlog_level( DEBUG ) && x ) {
            // do additional computation
            // ...
            streamlog_out( DEBUG ) <<  ....
          }

        - fixes:
            AIDAProcessor:  switched default file extension to root
            StringParameters.cc: protect against converting strings like "12.3.4" to float
            ProcessorLoader.cc : protect against loading duplicate libraries

        - cmake changes/fixes:
            - CMakeLists.txt: bug fixed to generated documentation (overview.html)
            - BUILD_WITH not needed anymore to configure Marlin

            - simplified mymarlin example !



================================
 CED
================================
 --------
| v01-01 |
 --------

    new features: (H. Hoelbe, DESY)
    - Add popup menu, to change background color, toggle layer visibly etc.
      Rightclick to open/close the menu
    - Add help frame, press 'h' to open/close this frame.
      This frame show shortcuts and the layer descriptions.
    - Viewers are able to add their layer descriptions to CED. This
      descriptions are shown in the popup menu and the help frame. To
      add layer descriptions use MarlinCED:set_layer_description or
      MarlinCED:add_layer_description.
    - Added test_ced_mhits (draws 1.000.000 random hits)

    changes/bug fixes: (H. Hoelbe, DESY)
    -  Make CED faster by adapt the frequence when the socket get read.
    -  Removed compiler warnings
    -  Zoom in/out are additional added to +/-
    -  More possible background colors
    -  User defined background color are now also accessible by pressing 'b'
       or using the popup menu
    -  removed old makefiles

================================
 CEDViewer
================================

 --------
| v01-01 |
 --------
    new features: (H. Hoelbe, DESY)
    -  CEDViewer:
        -  Adds now his layer description to CED
        -  Now also displays Reconstructed Particles. If there are no hits,
           than draw the helix.
    -  DSTViewer:
        -  Adds now his layer description to CED
        -  Cones have now a central line for picking
    -  GenericViewer:
        -  Adds now his layer description to CED

    -  ced2go (start event display and run Marlin in one go) :
        -  A script which simplify the use of Marlin with CED in some cases.
           ced2go needs the name of the LCIO file as an argument. Than it
           look to this file find out which gearfile is needed, create an
           steering file with this parameters. Than it starts CED and Marlin.
   

    changes/bug fixes: (H. Hoelbe, DESY)
    -  CEDViewer:
        - Helix part of tracks was not pickable. fixed


================================
 MarlinUtil
================================

 --------
| v01-01 |
 --------

       Changes (H. Hoelbe, DESY):
    -  New methods: MarlinCED::set_layer_description and
       MarlinCED::add_layer_description which stores the
       layer descriptions and call ced_describe_layer only
       one time per layer.
    -  Add usleep to the mainloop to avoid busy waiting
       (speed up CED)
    - CalorimeterHitType - added functions:
         CHT::Layout layoutFromString(const std::string& name) ;
         CHT::CaloID caloIDFromString(const std::string& name) ;
      (moved from MarlinReco/LDCCaloDigi/src/CHT_helper)
    - fixed: removed gsl include statements from public header files

================================
  MarlinReco   
================================

 --------
| v00-19 |
 --------

      - added new sub package FPCCDDigi (Daisuke Kamai)

      - Analysis/MarlinKinfit  (M.Beckmann) :
            several updates, new RootTracer, name changes (PhotonFitObject ->
        SimplePhotonFitObject, PhotonFitObjectPxyg -> ISRPhotonFitObject)

       - TPCDigitizer (S.Aplin)
         - protected against accessing NULL pointer from getMCParticle
        - clean up unused variables and unneeded ifdefs
        - fixed unsigned int == int comparison warnings
         - hit smearing (M.Thomson)

       - NewFTDDigiProcessor (A.Sailer)
         - Add NewFTDTrackDigi with smearing for strips or Pixels, depending LayerID

       - ILDCaloDigi.cc ( M.Thomson )
         - Added new digitiser for ILD calorimeters with timing cuts and ability to
           treat barrel and endcap differently

       - SimpleMuonDigi( M.Thomson)
         - improve calibration of muon hits and set a maximum energy for a single hit (factor
          two improvement in energy resolution). The defaults are appropriat e for ILD00

       - MaterialDB
         - new version for CLIC CDR studies CLICCDRMaterialDB
         - made gear parameters for SIT/SET (support) layer thicknesses DoubleVec
         - increased the max number of tracking surfaces in F77, see fkparm.inc

       - BrahmsTracking
         - removed tpc Ionisation Potential in F77
         - increased the max number of tracking surfaces in F77, see fkparm.inc

       - FullLDCTracking ( M.Thomson )
         - modifications to reduce the number of split or "ghost" tracks

       - V0Finder (M.Thomson)
         - improved checking to avoid false positives

        - BCalTagEfficiency.cc: fixed memory leak bug (C. Bartels)

        - RecoMCTruthLinker (M.Berggren)
         - added additional links (LCRelations) between ReconstructedParticles and Tracks and Clusters

          - code fixes (J.Engels)
            - made gcc 4.4 compliant
        - fixed various issues with gfortran and g2c
            - renamed get/setdEdx() to get/setEDep() in TrackDigitizers
            - fixed cmake issues

================================
  MarlinPandora
================================

TAG V00-03 FOR ILCSOFT USAGE

Deal with yoke plug hits and also hits that have zero absorber thickness.
Updated to reflect namespace changes to pandora::StatusCode enum and pandora::StatusCodeException class.
Added SimpleBFieldCalculator class and chose to use HighGranularityPseudoLayerCalculator class provided with 
PandoraPFANew library.
Updated PandoraSettings files to reflect recent changes and provided file that uses separate muon reconstruction.
Provided a gnu makefile.
Correct layer absorber thickness calculation.
Switch order of calls to register user content and create geometry.
Set BUILD_32BIT_COMPATIBLE to OFF by default.

================================
  PandoraPFANew
================================

TAG V00-04 FOR ILCSOFT USAGE

Improve OrderedCaloHitList memory management.
Added muon reconstruction algorithm, which complete muon particle flow object construction before the standard 
pandora reconstruction.
Improved PrimaryClustering algorithm to account for possible deletion of clusters during topological 
association algorithms.
Improved cluster and track preparation algorithms to deal with content already used in particle flow objects.
Improved em shower identification, cutting on number of radiation lengths in front of layer90 and shower max layer.
Improved em shower identification, cutting on shower transverse profile and energy fraction above "high" number of 
radiation lengths.
Improved SoftClusterMerging algorithm to avoid adding isolated photons to low energy electrons.
Removed unused muon hit information from main fragment removal algorithm.
Moved StatusCode enum and StatusCodeException class to namespace pandora.
Added default/null lists to cluster, calo hit and track managers.
Restructured track input list mechanics.
Added apis to "drop" current lists.
Addressed warnings produced when early reconstruction removes all hits/tracks/etc. from an event.
Removed error message in case where no pfos are formed.
Removed initial division of calo hit list in muon and non-muon lists from the calo hit manager.
Forbade negative b-field values at helix construction time. For now, user should flip charge sign.
Removed unused helix constructor.
Added BFieldCalculator functionality.
Client application must now specify pseudolayer calculator and bfield calculators.
Removed TrackSelection algorithm and replaced with EventPreparation algorithm.
Provided a gnu makefile.
Tidied GeometryHelper class, separating PseudoLayerCalculator and DetectorGap classes.
Improved pseudo layer calculation; now uses binary search and has improved treatment for barrel/endcap
overlap regions.
Added ability to create and use custom pseudo layer calculator class.
Added efficiency monitoring algorithm to assess particle identification purity and completeness.
Set BUILD_32BIT_COMPATIBLE to OFF by default.


================================
 LCFIVertex
================================

 ------------
| v00-04-pre |   (T.Tanabe)
 ------------

   * for gcc-4.4 compatibility: the boost library was updated to v1.44;
                                  other minor patches were added.



================================
 Overlay
================================
 _______
|v00-08 |
 -------
     - added new processor OverlayTimimg (P.Schade)
       for CLIC related bg studies



================================
  MarlinTPC
================================

v00-08-03

     - changed units in KalTest program parts (patch by K. Fujii) to
      match standard units in Marlin
     - Adding the new support for KalTest and KalDet parts:
      + now part of ilcsoft
      + changed the library paths in include directives accordingly
      (e.g. kaltest/TKalTrackSite.h or kaldet/EXTPCHit.h)
      + KalDet and KalTest need to be installed for it to work
      + modified the CMakeLists.txt file accordingly
      + removing the old/obsolete README file in reconstruction/
      + replacing it with the updated information in
        reconstruction/KalmanFilterREADME
  


================================
  Druid
================================

 Druid_1.8: Upgrade GDML format supporting with tunable transparency and color.
    Set light-packed default displaying collections (Detector Hits + final reconstructed 
    PFO if exist), and adding a button on the GUI to swithch between display of default collections/all collectins. 
    Also set buttons for the Select rotation center, reroll color and drew back display to origin orientation 
    and scale
    Setting PT Cut for MCParticle collection

 Druid_1.7: Random index generation (for color option),
    Steering syntax develope,
    GDML root file supporting,
    supporting vertex collection.

 Druid_1.6: Adding synchronized windows (showing R-phi, YZ plane), encounter several problems (slow display speed, 
            calohits & geometry missing) obsoleted version


================================
  RAIDA
================================

 -------
 | v01-05 |
  -------
      - fixed issue with duplicate histograms (M.Killenberg)
      - removed old GNUmakefiles


=====================================
  CMakeModules
====================================

-----------------------------------------------------
 v01-10-01
-----------------------------------------------------

 - added FindMokka.cmake
 - changes in FindROOT.cmake
    - bug fix: ROOT_${COMPONENT}_FOUND variables not set properly
    - renamed ROOT_LIB_${COMPONENT} to ROOT_${COMPONENT}_LIBRARY for individual libraries
    - reenabled dl lib (required for SL5 32bit)
 - replaced PKG_HOME variables with PKG_DIR (still
    backwards compatible)

=====================================
  ilcinstall
====================================
 
-----------------------------------------------------
 v01-10
-----------------------------------------------------
  - reorganized the release config scripts:
    new directory:
     ./releases/v01-10
    files:
       release-base.cfg
       release-ilcsoft.cfg
       release-scratch.cfg
       release-versions.py
    modify as needed (install path in elease-versions.py)
  
  - added Garlic module
  - changed MarlinTPC svn repository URL to desy
  - changed cmake build command to: cmake -C ..
  - added cmake find support for Mokka
  - added CED dependency to CEDViewer
  - added Leda dependency to simtools/physsim
  - added lib64 in search path for clhep, gsl and qt
  - removed libPandoraPFANew.so from MARLIN_DLL
  - removed obsolete patches

