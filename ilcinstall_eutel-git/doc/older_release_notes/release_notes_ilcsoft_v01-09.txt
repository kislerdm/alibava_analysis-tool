#################################
#
#   iLCSoft release - v01-09
#
#################################


********************    NEW patch release v01-09-02    ***************************

    Patch release v01-09-02 includes all bug fixes from v01-09-01 plus some
    additional bug fixes listed below:

    
    Changes from release:   v01-09-01 --> v01-09-02:
    ------------------------------------------------


    MarlinReco:  v00-18-01 --> v00-18-02

        - TPCDigiProcessor:
            - Fixed bug in hit smearing - in previous version unsmeared hit was used (smearing didn't do anything) (M. Thomson)
            - Protected against accessing NULL pointer from getMCParticle (K. Wichmann)
        - BCalTagEfficiency:
            - Fixed memory leak bug (C. Bartels)



    GEAR:  v00-14-01 --> v00-14-02

        - Fixed bug in calculation of overall TPC plane extent (M.Killenberg)



    RAIDA:  v01-04-03 --> v01-04-04

        - Removed redundant tree->commit() from destructor of histogram factory (M. Killenberg)

**********************************************************************************




**********************    NOTE to release v01-09-01    ***************************

    Please note that v01-09-01 is exactly the same code and the same package
    versions from v01-09 except for the MarlinReco package. The version of
    MarlinReco included in v01-09 contains a bug in the compiler flags which causes
    the fortran tracking code to produce no TPC tracks if compiled under 64bit with
    the gfortran compiler.

    The 32 bit compiled libraries are not affected by this bug even if run under
    64bit. However, please make sure to use the patched ilcsoft v01-09-01 if you
    want to compile MarlinReco under SL5 64bit natively.

**********************************************************************************


-------------------------------------------------------------------
New directory for afs reference installations - starting from  release v01-09:

  /afs/desy.de/project/ilcsoft/sw/

with subdirectories for different CPUs, operating systems and gcc versions.e.g:

 i386_gcc34_sl4       # i386 CPU, 32 bit, gcc3.4, SL4, SL5 and compatible
 x86_64_gcc41_sl5     # i686 CPU, 64 bit, gcc4.1, SL5 and compatible

The old ilcsoft releases are still available under /afs/desy.de/group/it/ilcsoft.

[The old path relied on the @sys mechanism for afs to automatically link to the 
appropriate subdirectory. However this mechanism is no longer supported by 
current OS versions and e.g. does not allow to distinguish 32bit from 64bit builds]

This release for SL4 32bit and compatible is at:


   /afs/desy.de/project/ilcsoft/sw/i386_gcc34_sl4/v01-09-02


The ilcsoft release compiled for SL5 64bit is located under:


   /afs/desy.de/project/ilcsoft/sw/x86_64_gcc41_sl5/v01-09-02



------------------------------------------------------------------

================================

 New packages in iLCSoft since v01-9 

  PandoraPFANew   - v00-02
  MarlinPandora   - v00-01

  Druid           - 1.5
================================


-------------------------------------------------------------------------
Release notes of packages that have been changed or added since v01-08-01
-------------------------------------------------------------------------

================================
 LCIO
================================

 --------
| v01-51 |
 --------
   
  changes to EDM:
  --------------
     
     - SimTrackerHit and TrackerHit:

       -  renamed get/setdEdx() in  to get/setEDep() 
          - energy deposited in the hit in GeV
          - getdEdx() is deprecated and will result in a printed WARNING

     - TrackerHit:

         - added get/setEdepError()


     - TrackerPulse:
  
         - added getCovarianceMatrix() for measurement errors of getCharge() and 
           getTime()   [LCIO-72]


  new features:
  --------------

    - improved direct access to events, by introducing 
      additional records LCIOindex, LCIORandomAccess written on close()
      ( no need for fast skip or creation of table of contents on open() )

       - implemented in C++ and Java

       - the binary 'addRandomAccess' can be used to add random access
         records to existing older files (if stored in writable file system) 


    - new ostream operator<<(T)  for LCIO classes in UTIL/Operators.h
      e.g.:
         cout << ((MCParticle*) c->getElementAt(i) )  << endl ; 
 
   

    - improved cmake support for LCIO developers  (J.Engels)

        - generation of *.h files w/o ant 
          -> proper dependiencies are observed for re-compiling

        - add target for building reference manual


    - LCWarning utility class for printing 'deprecated' warnings for   
      n times per job


    - made compatible w/ fcc 4.3.3


    - lsh.cc: quit if CTRL-D (EOF) is pressed
      (http://bugs.freehep.org/browse/LCIO-58)


    - added support for Java builds with Maven (J.McCormick)


  bug fixes:
  ----------
    - SIORelation.java: exchanged getFrom() and getTo()
      (SIODump had 'from' and 'to' exchanged)

    - LCTOOLS.cc: protected against missing tracks and clusters (null pointers)
      -> fixes seg. faults in dumpevent 

    - SIOLCCollection.java fixed bug with subset collections


================================
  LCCD   
================================

 --------
| v01-00 |   (S.Aplin)
 -------- 

   !!!    LCCD v01-00 needs version CondDBMySQL_ILC-0-8 or higher  !!!


 -  IConditionsChangeListener 
       now maintains a list of handlers with which the listener has been registered

  -  IConditionsHandler 

     - now takes a default collection that is sent to registered IConditionsChangeListeners
       whenever no conditions data is availabele for a given timestamp

         - Note: this is only implemented in the DBCondHandler and DBFileHandler classes 
                 and not in SimpleFileHandler and DataFileHandler. 
                 For the latter two classes calling the methods:
                     virtual void registerDefaultCollection( lcio::LCCollection* col);
                     virtual lcio::LCCollection* defaultCollection() ;
                     virtual lcio::LCCollection* lastValidCollection()  ;
                 will cause an exception to be thrown.

         - Note: if no default collection is registered for a given handler 
                 and no data is available an exception will be thrown by the handler 
                 which will not be caught by the LCConditionsMgr.

      - also now holds the last valid collection
                 virtual lcio::LCCollection* lastValidCollection()  ;
          (not SimpleFileHandler and DataFileHandler)

      - added new method:
                     virtual bool isChangeListenerRegistered( IConditionsChangeListener* cl ) ;


  -  LCConditionsMgr 

       - no longer catches exceptions in the update and updateEvent methods.



================================
  MarlinReco   
================================

 --------
| v00-18 |
 --------

      - added new package Tracking/KinkFinder  (M.Thomson, J.Marshall)

      - moved sub-package BCalTagEfficiency from MarlinAna to ./Analysis

      - Tracking/V0Finder : fix for Lambda0bar (M.Thomson)

      - improved compatibility for gcc 4.x
        - g2c/gfortran in sl5 with gcc 4.1.1
        - fixed CaloDigi/LDCCaloDigi/src/CHT_helper.cc for gcc 4.4.3

     bug fixes:

      - CaloDigi/SimpleLHCalDigi.cc, CaloDigi/SimpleMuonDigi.cc,
         added missing output relation collection to the event

      - bug fixes in SimpleMuonDigi, (New)LDCCaloDigi wrt. to
        ecoding of calorimeter layout in CalorimeterHit::type 
        (was allways CHT::any)

      - fixed bug in TPCDigitizer with hit-MCParticle association

      - PFOID/src/PFOID.cc: addedd missing information
	that order of pdfs must be consistent with parameter
	EnergyBoundaries in parameter description   

      - TrackDigi/TPCDigi/src/TPCDigiProcessor.cc: fixed a bug in the
	logic when checking for hits from the same MCParticle 
        (last hit compared with itself)



================================
 CED
================================
 --------
| v01-00  |
 ---------
     new features: (H. Hoelbe, DESY)
     -  enabled picking (double-click on objects)
     -  zoom (mouse-wheel)
     -  backgroud color option (e.g. glced -bgcolor black)
     -  new ced_write_text function

      merged from calice branch:
       - filled boxes
       - fixed perspective
       - b-key toggles background color 
         (light-blue, black, gray shades, white)
	
     bug fix: 
        -  CED no longer crashes when drawing more 
           than ~350.000 hits (H. Hoelbe)

================================
 CEDViewer
================================

 --------
| v01-00 |
 --------
     - new release of CEDViewer with 'picking' functionality 
        - implemented  in CEDViewer and GenericViewer
        - see ./doc/CEDPicking.pdf for details   


================================
 MarlinUtil
================================
 --------
| v01-00 |
 -------- 
     - added support for picking to MarlinCED 
     - made compliant w/ gcc 4.4.3 
     - made compliant w/ MacOSX



================================
 Overlay
================================
 __________
|v00-07-02 |
 ----------
   - minor fixes and improvements

        - CMakeLists.txt:
          - BUILD_32BIT_COMPATIBLE set per default to OFF
          - added exclude pattern for .svn dirs
          - added ctest

        - fixed doxygen documentation


================================
  Mokka
================================

 mokka-07-04
 -----------   

new in this release:

I. Exporting detector geometry in VRML files

II. New implementation of hybrid Silicon - Scintillator Ecal

III. Bug fix in VXD03.

IV. Change in Mokka/source/Kernel/GNUmakefile

V. New implementation for BeamCal


================================
  MarlinTPC
================================

v00-05-02:

Main additions are the KalmanFilter reconstruction package and the HitFinder for row based pad geometries.

Updates (and bugfixes)
PulseFinder
Likelihood fitter
TPCCloudSimulation
TopoFinder (zAnode position, collection writing, time separation)
Mokka2VoxelProcessor - Introduced second half TPC, writes two collections
createProcessor.py (new option, example code inserted)
PrimaryIonisationProcessor
TPCElectronicsProcessor - Major rewrite
AddEmptyPedestalsProcessor
BiasedResidualProcessor - 2 parameters 
PedestalHandler
PedestalSubstratorProcessor

Bug fixes:
LCObjectCopier - Fixed memory leak
replaced tpcconddata with lib_tpcconddata (see commit: r1980)
calling 'make -j9' would not build generateRawData due to missing dependency of lib_tpcconddata target
TopoFinder - Fixed problem with wrap-around for full circle geometry
TrackFitterFactory - Fixed behaviour for Likelihood and linear regression (still not implemented)
CutApplicationProcessor - Fixed bug for NHitsOnTrack cut
Mokka2VoxelProcessor - Fixed bug in charge distribution, memory leak, minor things
TrackFitterKalman - Fixed implementation of static getInstance for the dummy version
AddEmptyPedestalsProcessor  - writes pedestals to first event in the file
TPCElectronicsProcessor_ADCPulse (removed compiler warnings, corrected verbosity level)
PrimaryIonisationProcessor - fixed number of elecrtons in curlers for grouped electrons
TimePixParameters - fixed serious index errors 
ADCPulseConverterProcessor and MokkaToVoxelProcessor  - Fixed calculation of time 
MokkaToVoxelProcessor - Fixed wrong error message 

