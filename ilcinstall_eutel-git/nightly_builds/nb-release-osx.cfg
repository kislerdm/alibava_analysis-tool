#################################################################
# Configuration file for ILCSoft OSX nightly builds
#
# Author: K. Fujii
#################################################################

# mail adresses for sending nightly build output
#mail_addresses=[ "keisuke.fujii@kek.jp" ]

print "Executing configfile"

# ILCSoft( "install path for ILC software")
# ilcsoft = ILCSoft("/scratch/nbuilds/"+date_iso8601+"/"+config_file_basename)
# ilcsoft = ILCSoft("/home/miyamoto/soft/ilcsoft/HEAD/"+date_iso8601+"/"+config_file_basename)
ilcsoft = ILCSoft("/proj/soft/ilcsoft/HEAD/"+date_iso8601)
# set to an ilcsoft release
# ilcPath = "/afs/desy.de/group/it/ilcsoft/"
ilcPath="/proj/soft/ilcsoft/HEAD/"

ilcsoft.logfile="logfile"

#----- global variables -----------------------------------------
# download settings
#ilcsoft.downloadType = "ccvssh"
#ilcsoft.downloadUser = "username"
#ilcsoft.downloadOnly = "True"

# global environment variables
ilcsoft.env["MAKEOPTS"]="-j3"
ilcsoft.env["CXX"]="g++"
ilcsoft.env["CC"]="gcc"
ilcsoft.env["FC"]="gfortran"
#if ilcsoft.os.isSL(3) :
#    ilcsoft.env["FC"]="g77"
#else:
#    ilcsoft.env["FC"]="gfortran"

# global cmake variables
#ilcsoft.envcmake["CMAKE_VERBOSE_MAKEFILE"]=1
#ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "Release"
#----------------------------------------------------------------

# ilcsoft
ilcsoft.install( CED( "HEAD" ))
ilcsoft.module("CED").envcmake['CED_SERVER']='ON'
ilcsoft.install( LCIO( "HEAD" ))
ilcsoft.install( LCCD( "HEAD" ))
ilcsoft.install( GEAR( "HEAD" ))
#ilcsoft.link( GEAR( "/proj/soft/ilcsoft/HEAD/new-marlin/gear_bzr_r82" ))
ilcsoft.install( RAIDA( "HEAD" ))

# Marlin
ilcsoft.install( Marlin( "HEAD" ))
ilcsoft.module("Marlin").envcmake["MARLIN_GUI"] = 0

# Marlin Packages
ilcsoft.install( Overlay( "HEAD" ))
ilcsoft.install( MarlinUtil( "HEAD" ))
ilcsoft.install( MarlinReco( "HEAD" ))
ilcsoft.install( CEDViewer( "HEAD" ))
ilcsoft.install( PandoraPFANew( "HEAD" ))
ilcsoft.install( PandoraAnalysis( "HEAD" ))
ilcsoft.install( MarlinPandora( "HEAD" ))
ilcsoft.install( LCFIVertex( "HEAD" ))
ilcsoft.install( Eutelescope( "HEAD" ))
ilcsoft.install( MarlinTPC( "HEAD" ))

# external dependencies
# ilcsoft.use( QT( ilcPath + "QT/4.2.2" ))
# ilcsoft.link( QT( "/proj/soft/ext/QT/4.3.3" ))

# ilcsoft.use( GSL( ilcPath + "gsl/1.8" ))
#ilcsoft.link( GSL( "/proj/soft/ext/gsl/1.10" ))
ilcsoft.link( GSL( "/usr/osxws" ))

# ilcsoft.use( CLHEP( ilcPath + "CLHEP/2.0.3.2" ))
#ilcsoft.link( CLHEP( "/proj/soft/ext/clhep/2.0.3.2" ))
ilcsoft.link( CLHEP( "/usr/osxws" ))

# ilcsoft.use( CERNLIB( ilcPath + "cernlib/2006" ))
#ilcsoft.link( CERNLIB( "/proj/soft/ilcsoft/utils/cernlib/2006" ))
ilcsoft.link( CERNLIB( "/cern/2006" ))

# ilcsoft.use( ROOT( ilcPath + "root/5.16.00" ))
#ilcsoft.use( ROOT( "/proj/soft/ext/root/5.18.00" ))
ilcsoft.use( ROOT( "/opt/root/root_v5.22.00a-macosx10.5-i386" ))

# ilcsoft.use( MySQL( ilcPath + "mysql/5.0.26" ))
ilcsoft.link( MySQL( "/usr/osxws" ))

#ilcsoft.install( CondDBMySQL( "HEAD" ))
# ilcsoft.use( CondDBMySQL( ilcPath + "CondDBMySQL/CondDBMySQL_ILC-0-5-10" ))
#ilcsoft.link( CondDBMySQL( "/proj/soft/ext/CondDBMySQL/ILC-0-5-10" ))
ilcsoft.link( CondDBMySQL( "/usr/osxws" ))

ilcsoft.install( Mokka( "HEAD" ))
#ilcsoft.module( "Mokka" ).download.type="cvsssh"

# ilcsoft.use( Geant4 ( ilcPath + "geant4/9.0" ))
#ilcsoft.link( Geant4 ( "/proj/soft/ext/g4/geant4.9.1.p01" ))
ilcsoft.link( Geant4 ( "/opt/g4/geant4.9.2" ))

# if you don't have an env.sh script in the 'use/link' directory specified above for
# configuring geant4 use the following line (full path!) for defining another location:
# ilcsoft.module( "Geant4" ).env["G4ENV_INIT"] = ilcPath + "geant4/env_9.0.sh"
#ilcsoft.module( "Geant4" ).env["G4ENV_INIT"] = ilcPath + date_iso8601+"/geant4/geant4.9.1.p01/env.sh"
ilcsoft.module( "Geant4" ).env["G4ENV_INIT"] = "/opt/g4/geant4.9.2/env.sh"

# Java
#if( ilcsoft.os.isSL(3) ):
#    ilcsoft.use( Java( ilcPath + "java/1.5.0" ))
#if( ilcsoft.os.isSL(4) ):
#    ilcsoft.use( Java( ilcPath + "java/1.6.0" ))
#ilcsoft.link( Java( "/usr/java/jdk1.5.0_14" ))
ilcsoft.link( Java( "/Library/Java/Home" ))

# cmake
# ilcsoft.use( CMake( ilcPath + "CMake/2.4.6" ))
#ilcsoft.use( CMake( "/usr/local" ))
ilcsoft.use( CMake( "/usr/osxws" ))
ilcsoft.install( ILCUTIL( "HEAD" ))

# end of configuration file

print "End of configfile"

